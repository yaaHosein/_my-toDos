{"version":3,"file":"aurelia-framework.js","sources":["../../src/framework-configuration.ts","../../src/aurelia.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\r\nimport * as TheLogManager from 'aurelia-logging';\r\nimport { ViewEngine, HtmlBehaviorResource } from 'aurelia-templating';\r\nimport { join } from 'aurelia-path';\r\nimport type { Container } from 'aurelia-dependency-injection';\r\nimport type { Aurelia } from './aurelia';\r\nimport type { Loader } from 'aurelia-loader';\r\n\r\nconst logger = TheLogManager.getLogger('aurelia');\r\nconst extPattern = /\\.[^/.]+$/;\r\n\r\nfunction runTasks(config: FrameworkConfiguration, tasks) {\r\n  let current;\r\n  let next = () => {\r\n    current = tasks.shift();\r\n    if (current) {\r\n      return Promise.resolve(current(config)).then(next);\r\n    }\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  return next();\r\n}\r\n\r\nexport interface FrameworkPluginInfo {\r\n  moduleId?: string;\r\n  resourcesRelativeTo?: string[];\r\n  configure?: (config: FrameworkConfiguration, pluginConfig?: any) => any;\r\n  config?: any;\r\n}\r\n\r\nfunction loadPlugin(fwConfig: FrameworkConfiguration, loader: Loader, info: FrameworkPluginInfo) {\r\n  logger.debug(`Loading plugin ${info.moduleId}.`);\r\n  if (typeof info.moduleId === 'string') {\r\n    fwConfig.resourcesRelativeTo = info.resourcesRelativeTo;\r\n\r\n    let id = info.moduleId; // General plugins installed/configured by the end user.\r\n\r\n    if (info.resourcesRelativeTo.length > 1 ) { // In case of bootstrapper installed plugins like `aurelia-templating-resources` or `aurelia-history-browser`.\r\n      return loader.normalize(info.moduleId, info.resourcesRelativeTo[1])\r\n        .then(normalizedId => _loadPlugin(normalizedId));\r\n    }\r\n\r\n    return _loadPlugin(id);\r\n  } else if (typeof info.configure === 'function') {\r\n    if (fwConfig.configuredPlugins.indexOf(info.configure) !== -1) {\r\n      return Promise.resolve();\r\n    }\r\n    fwConfig.configuredPlugins.push(info.configure);\r\n    // use info.config || {} to keep behavior consistent with loading from string\r\n    return Promise.resolve(info.configure.call(null, fwConfig, info.config || {}));\r\n  }\r\n  throw new Error(invalidConfigMsg(info.moduleId || info.configure, 'plugin'));\r\n\r\n  function _loadPlugin(moduleId) {\r\n    return loader.loadModule(moduleId).then(m => { // eslint-disable-line consistent-return\r\n      if ('configure' in m) {\r\n        if (fwConfig.configuredPlugins.indexOf(m.configure) !== -1) {\r\n          return Promise.resolve();\r\n        }\r\n        return Promise.resolve(m.configure(fwConfig, info.config || {})).then(() => {\r\n          fwConfig.configuredPlugins.push(m.configure);\r\n          fwConfig.resourcesRelativeTo = null;\r\n          logger.debug(`Configured plugin ${info.moduleId}.`);\r\n        });\r\n      }\r\n\r\n      fwConfig.resourcesRelativeTo = null;\r\n      logger.debug(`Loaded plugin ${info.moduleId}.`);\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadResources(aurelia, resourcesToLoad, appResources) {\r\n  // if devs want to go all in static, and remove loader\r\n  // the code after this fucntion shouldn't run\r\n  // add a check to make sure it only runs when there is something to do so\r\n  if (Object.keys(resourcesToLoad).length === 0) {\r\n    return Promise.resolve();\r\n  }\r\n  let viewEngine = aurelia.container.get(ViewEngine);\r\n\r\n  return Promise.all(Object.keys(resourcesToLoad).map(n => _normalize(resourcesToLoad[n])))\r\n    .then(loads => {\r\n      let names = [];\r\n      let importIds = [];\r\n\r\n      loads.forEach(l => {\r\n        names.push(undefined);\r\n        importIds.push(l.importId);\r\n      });\r\n\r\n      return viewEngine.importViewResources(importIds, names, appResources);\r\n    });\r\n\r\n  function _normalize(load) {\r\n    let moduleId = load.moduleId;\r\n    let ext = getExt(moduleId);\r\n\r\n    if (isOtherResource(moduleId)) {\r\n      moduleId = removeExt(moduleId);\r\n    }\r\n\r\n    return aurelia.loader.normalize(moduleId, load.relativeTo)\r\n      .then(normalized => {\r\n        return {\r\n          name: load.moduleId,\r\n          importId: isOtherResource(load.moduleId) ? addOriginalExt(normalized, ext) : normalized\r\n        };\r\n      });\r\n  }\r\n\r\n  function isOtherResource(name) {\r\n    let ext = getExt(name);\r\n    if (!ext) return false;\r\n    if (ext === '') return false;\r\n    if (ext === '.js' || ext === '.ts') return false;\r\n    return true;\r\n  }\r\n\r\n  function removeExt(name) {\r\n    return name.replace(extPattern, '');\r\n  }\r\n\r\n  function addOriginalExt(normalized, ext) {\r\n    return removeExt(normalized) + '.' + ext;\r\n  }\r\n}\r\n\r\nfunction getExt(name: string) { // eslint-disable-line consistent-return\r\n  let match = name.match(extPattern);\r\n  if (match && match.length > 0) {\r\n    return (match[0].split('.'))[1];\r\n  }\r\n}\r\n\r\nfunction loadBehaviors(config: FrameworkConfiguration) {\r\n  return Promise.all(config.behaviorsToLoad.map(m => m.load(config.container, m.target))).then(() => {\r\n    config.behaviorsToLoad = null;\r\n  });\r\n}\r\n\r\nfunction assertProcessed(plugins: FrameworkConfiguration) {\r\n  if (plugins.processed) {\r\n    throw new Error('This config instance has already been applied. To load more plugins or global resources, create a new FrameworkConfiguration instance.');\r\n  }\r\n}\r\n\r\nfunction invalidConfigMsg(cfg: any, type: string) {\r\n  return `Invalid ${type} [${cfg}], ${type} must be specified as functions or relative module IDs.`;\r\n}\r\n\r\n/**\r\n * Manages configuring the aurelia framework instance.\r\n */\r\nexport class FrameworkConfiguration {\r\n  /**\r\n   * The root DI container used by the application.\r\n   */\r\n  container: Container;\r\n\r\n  /**\r\n   * The aurelia instance.\r\n   */\r\n  aurelia: Aurelia;\r\n\r\n  /**\r\n   * Plugin / feature loading instruction\r\n   * @type {FrameworkPluginInfo[]}\r\n   *\r\n   * @internal\r\n   */\r\n  info: FrameworkPluginInfo[];\r\n\r\n  /** @internal */\r\n  processed: boolean;\r\n\r\n  /** @internal */\r\n  preTasks: any[];\r\n\r\n  /** @internal */\r\n  postTasks: any[];\r\n\r\n  /** @internal */\r\n  behaviorsToLoad: any[];\r\n\r\n  /** @internal */\r\n  configuredPlugins: any[];\r\n\r\n  /** @internal */\r\n  resourcesToLoad: Record<string, any>;\r\n\r\n  /** @internal */\r\n  bootstrapperName: string;\r\n\r\n  /** @internal */\r\n  resourcesRelativeTo: string[];\r\n\r\n  /**\r\n   * Creates an instance of FrameworkConfiguration.\r\n   * @param aurelia An instance of Aurelia.\r\n   */\r\n  constructor(aurelia: Aurelia) {\r\n    this.aurelia = aurelia;\r\n    this.container = aurelia.container;\r\n    this.info = [];\r\n    this.processed = false;\r\n    this.preTasks = [];\r\n    this.postTasks = [];\r\n    /**\r\n     * Custom element's metadata queue for loading view factory\r\n     * @type {HtmlBehaviorResource[]}\r\n     */\r\n    this.behaviorsToLoad = [];\r\n    /**\r\n     * Plugin configure functions temporary cache for avoid duplicate calls\r\n     * @type {Function[]}\r\n     */\r\n    this.configuredPlugins = [];\r\n    this.resourcesToLoad = {};\r\n    this.preTask(() => aurelia.loader.normalize('aurelia-bootstrapper', undefined)\r\n      .then(name => this.bootstrapperName = name));\r\n    this.postTask(() => loadResources(aurelia, this.resourcesToLoad, aurelia.resources));\r\n  }\r\n\r\n  /**\r\n   * Adds an existing object to the framework's dependency injection container.\r\n   * @param type The object type of the dependency that the framework will inject.\r\n   * @param instance The existing instance of the dependency that the framework will inject.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  instance(type: any, instance: any): FrameworkConfiguration {\r\n    this.container.registerInstance(type, instance);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a singleton to the framework's dependency injection container.\r\n   * @param type The object type of the dependency that the framework will inject.\r\n   * @param implementation The constructor function of the dependency that the framework will inject.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  singleton(type: any, implementation?: Function): FrameworkConfiguration {\r\n    this.container.registerSingleton(type, implementation as any);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a transient to the framework's dependency injection container.\r\n   * @param type The object type of the dependency that the framework will inject.\r\n   * @param implementation The constructor function of the dependency that the framework will inject.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  transient(type: any, implementation?: Function): FrameworkConfiguration {\r\n    this.container.registerTransient(type, implementation as any);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds an async function that runs before the plugins are run.\r\n   * @param task The function to run before start.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  preTask(task: Function): FrameworkConfiguration {\r\n    assertProcessed(this);\r\n    this.preTasks.push(task);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds an async function that runs after the plugins are run.\r\n   * @param task The function to run after start.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  postTask(task: Function): FrameworkConfiguration {\r\n    assertProcessed(this);\r\n    this.postTasks.push(task);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures an internal feature plugin before Aurelia starts.\r\n   * @param plugin The folder for the internal plugin to configure (expects an index.js in that folder).\r\n   * @param config The configuration for the specified plugin.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  feature(plugin: string | ((config: FrameworkConfiguration, pluginConfig?: any) => any), config: any = {}): FrameworkConfiguration {\r\n    switch (typeof plugin) {\r\n    case 'string':\r\n      let hasIndex = /\\/index$/i.test(plugin);\r\n      let moduleId = hasIndex || getExt(plugin) ? plugin : plugin + '/index';\r\n      let root = hasIndex ? plugin.slice(0, -6) : plugin;\r\n      this.info.push({ moduleId, resourcesRelativeTo: [root, ''], config });\r\n      break;\r\n      // return this.plugin({ moduleId, resourcesRelativeTo: [root, ''], config });\r\n    case 'function':\r\n      this.info.push({ configure: plugin, config: config || {} });\r\n      break;\r\n    default:\r\n      throw new Error(invalidConfigMsg(plugin, 'feature'));\r\n    }\r\n    return this;\r\n    // return this.plugin(plugin, config);\r\n  }\r\n\r\n  /**\r\n   * Adds globally available view resources to be imported into the Aurelia framework.\r\n   * @param resources The relative module id to the resource. (Relative to the plugin's installer.)\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  globalResources(resources: string | Function | Array<string | Function>): FrameworkConfiguration {\r\n    assertProcessed(this);\r\n\r\n    // eslint-disable-next-line prefer-rest-params\r\n    let toAdd = Array.isArray(resources) ? resources : arguments;\r\n    let resource;\r\n    let resourcesRelativeTo = this.resourcesRelativeTo || ['', ''];\r\n\r\n    for (let i = 0, ii = toAdd.length; i < ii; ++i) {\r\n      resource = toAdd[i];\r\n      switch (typeof resource) {\r\n      case 'string':\r\n        let parent = resourcesRelativeTo[0];\r\n        let grandParent = resourcesRelativeTo[1];\r\n        let name = resource;\r\n\r\n        if ((resource.startsWith('./') || resource.startsWith('../')) && parent !== '') {\r\n          name = join(parent, resource);\r\n        }\r\n\r\n        this.resourcesToLoad[name] = { moduleId: name, relativeTo: grandParent };\r\n        break;\r\n      case 'function':\r\n        let meta = this.aurelia.resources.autoRegister(this.container, resource);\r\n        if (meta instanceof HtmlBehaviorResource && meta.elementName !== null) {\r\n          if (this.behaviorsToLoad.push(meta) === 1) {\r\n            this.postTask(() => loadBehaviors(this));\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(invalidConfigMsg(resource, 'resource'));\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Renames a global resource that was imported.\r\n   * @param resourcePath The path to the resource.\r\n   * @param newName The new name.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n   */\r\n  globalName(resourcePath: string, newName: string): FrameworkConfiguration {\r\n    assertProcessed(this);\r\n    this.resourcesToLoad[resourcePath] = { moduleId: newName, relativeTo: '' };\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures an external, 3rd party plugin before Aurelia starts.\r\n   * @param plugin The ID of the 3rd party plugin to configure.\r\n   * @param pluginConfig The configuration for the specified plugin.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n */\r\n  plugin(\r\n    plugin: string | ((frameworkConfig: FrameworkConfiguration) => any) | FrameworkPluginInfo,\r\n    pluginConfig?: any\r\n  ): FrameworkConfiguration {\r\n    assertProcessed(this);\r\n\r\n    let info: FrameworkPluginInfo;\r\n    switch (typeof plugin) {\r\n    case 'string':\r\n      info = { moduleId: plugin, resourcesRelativeTo: [plugin, ''], config: pluginConfig || {} };\r\n      break;\r\n    case 'function':\r\n      info = { configure: plugin, config: pluginConfig || {} };\r\n      break;\r\n    default:\r\n      throw new Error(invalidConfigMsg(plugin, 'plugin'));\r\n    }\r\n    this.info.push(info);\r\n    return this;\r\n  }\r\n\r\n  /** @internal */\r\n  _addNormalizedPlugin(name, config?) {\r\n    let plugin = { moduleId: name, resourcesRelativeTo: [name, ''], config: config || {} };\r\n    this.info.push(plugin);\r\n\r\n    this.preTask(() => {\r\n      let relativeTo = [name, this.bootstrapperName];\r\n      plugin.moduleId = name;\r\n      plugin.resourcesRelativeTo = relativeTo;\r\n      return Promise.resolve();\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  // Default configuration helpers\r\n  // Note: Please do NOT add PLATFORM.moduleName() around those module names.\r\n  //       Those functions are not guaranteed to be called, they are here to faciliate\r\n  //       common configurations. If they are not called, we don't want to include a\r\n  //       static dependency on those modules.\r\n  //       Including those modules in the bundle or not is a decision that must be\r\n  //       taken by the bundling tool, at build time.\r\n\r\n  /**\r\n   * Plugs in the default binding language from aurelia-templating-binding.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  defaultBindingLanguage(): FrameworkConfiguration {\r\n    return this._addNormalizedPlugin('aurelia-templating-binding');\r\n  }\r\n\r\n  /**\r\n   * Plugs in the router from aurelia-templating-router.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  router(): FrameworkConfiguration {\r\n    return this._addNormalizedPlugin('aurelia-templating-router');\r\n  }\r\n\r\n  /**\r\n   * Plugs in the default history implementation from aurelia-history-browser.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  history(): FrameworkConfiguration {\r\n    return this._addNormalizedPlugin('aurelia-history-browser');\r\n  }\r\n\r\n  /**\r\n   * Plugs in the default templating resources (if, repeat, show, compose, etc.) from aurelia-templating-resources.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  defaultResources(): FrameworkConfiguration {\r\n    return this._addNormalizedPlugin('aurelia-templating-resources');\r\n  }\r\n\r\n  /**\r\n   * Plugs in the event aggregator from aurelia-event-aggregator.\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  eventAggregator(): FrameworkConfiguration {\r\n    return this._addNormalizedPlugin('aurelia-event-aggregator');\r\n  }\r\n\r\n  /**\r\n   * Sets up a basic Aurelia configuration. This is equivalent to calling `.defaultBindingLanguage().defaultResources().eventAggregator();`\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  basicConfiguration(): FrameworkConfiguration {\r\n    return this.defaultBindingLanguage().defaultResources().eventAggregator();\r\n  }\r\n\r\n  /**\r\n   * Sets up the standard Aurelia configuration. This is equivalent to calling `.defaultBindingLanguage().defaultResources().eventAggregator().history().router();`\r\n   * @return Returns the current FrameworkConfiguration instance.\r\n  */\r\n  standardConfiguration(): FrameworkConfiguration {\r\n    return this.basicConfiguration().history().router();\r\n  }\r\n\r\n  /**\r\n   * Plugs in the ConsoleAppender and sets the log level to debug.\r\n   * @param level The log level (none/error/warn/info/debug), default to 'debug'.\r\n   * @return {FrameworkConfiguration} Returns the current FrameworkConfiguration instance.\r\n  */\r\n  developmentLogging(level?: string): FrameworkConfiguration {\r\n    let logLevel = level ? TheLogManager.logLevel[level] : undefined;\r\n\r\n    if (logLevel === undefined) {\r\n      logLevel = TheLogManager.logLevel.debug;\r\n    }\r\n\r\n    this.preTask(() => {\r\n      return this.aurelia.loader.normalize('aurelia-logging-console', this.bootstrapperName).then(name => {\r\n        return this.aurelia.loader.loadModule(name).then(m => {\r\n          TheLogManager.addAppender(new m.ConsoleAppender());\r\n          TheLogManager.setLevel(logLevel);\r\n        });\r\n      });\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Loads and configures the plugins registered with this instance.\r\n   * @return Returns a promise which resolves when all plugins are loaded and configured.\r\n  */\r\n  apply(): Promise<void> {\r\n    if (this.processed) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return runTasks(this, this.preTasks).then(() => {\r\n      let loader = this.aurelia.loader;\r\n      let info = this.info;\r\n      let current;\r\n\r\n      let next = () => {\r\n        current = info.shift();\r\n        if (current) {\r\n          return loadPlugin(this, loader, current).then(next);\r\n        }\r\n\r\n        this.processed = true;\r\n        this.configuredPlugins = null;\r\n        return Promise.resolve();\r\n      };\r\n\r\n      return next().then(() => runTasks(this, this.postTasks));\r\n    });\r\n  }\r\n}\r\n\r\n/** @internal */\r\ndeclare module 'aurelia-templating' {\r\n  interface HtmlBehaviorResource {\r\n    elementName: string | null;\r\n  }\r\n}\r\n","import * as TheLogManager from 'aurelia-logging';\r\nimport {Container} from 'aurelia-dependency-injection';\r\nimport {Loader} from 'aurelia-loader';\r\nimport {BindingLanguage, ViewSlot, ViewResources, TemplatingEngine, CompositionTransaction, View, CompositionContext} from 'aurelia-templating';\r\nimport {DOM, PLATFORM} from 'aurelia-pal';\r\nimport {relativeToFile} from 'aurelia-path';\r\nimport {FrameworkConfiguration} from './framework-configuration';\r\n\r\nfunction preventActionlessFormSubmit() {\r\n  DOM.addEventListener('submit', evt => {\r\n    const target = evt.target as HTMLFormElement;\r\n    const action = target.action;\r\n\r\n    if (target.tagName.toLowerCase() === 'form' && !action) {\r\n      evt.preventDefault();\r\n    }\r\n  }, false);\r\n}\r\n\r\n/**\r\n * The framework core that provides the main Aurelia object.\r\n */\r\nexport class Aurelia {\r\n  /**\r\n   * The DOM Element that Aurelia will attach to.\r\n   */\r\n  host: Element;\r\n  /**\r\n  /**\r\n   * The loader used by the application.\r\n   */\r\n  loader: Loader;\r\n  /**\r\n   * The root DI container used by the application.\r\n   */\r\n  container: Container;\r\n  /**\r\n   * The global view resources used by the application.\r\n   */\r\n  resources: ViewResources;\r\n\r\n  /**\r\n   * The configuration used during application startup.\r\n   */\r\n  use: FrameworkConfiguration;\r\n\r\n  /** @internal */\r\n  private logger: TheLogManager.Logger;\r\n\r\n  /** @internal */\r\n  _started: Promise<this>;\r\n\r\n  /** @internal */\r\n  private hostConfigured: boolean;\r\n\r\n  /** @internal */\r\n  private root: View;\r\n\r\n  /** @internal */\r\n  private configModuleId: string;\r\n\r\n  /** @internal */\r\n  private hostSlot: ViewSlot;\r\n\r\n  /**\r\n   * Creates an instance of Aurelia.\r\n   * @param loader The loader for this Aurelia instance to use. If a loader is not specified, Aurelia will use the loader type specified by PLATFORM.Loader.\r\n   * @param container The dependency injection container for this Aurelia instance to use. If a container is not specified, Aurelia will create an empty, global container.\r\n   * @param resources The resource registry for this Aurelia instance to use. If a resource registry is not specified, Aurelia will create an empty registry.\r\n   */\r\n  constructor(loader?: Loader, container?: Container, resources?: ViewResources) {\r\n    this.loader = loader || new PLATFORM.Loader();\r\n    this.container = container || (new Container()).makeGlobal();\r\n    this.resources = resources || new ViewResources();\r\n    this.use = new FrameworkConfiguration(this);\r\n    this.logger = TheLogManager.getLogger('aurelia');\r\n    this.hostConfigured = false;\r\n    this.host = null;\r\n\r\n    this.use.instance(Aurelia, this);\r\n    this.use.instance(Loader, this.loader);\r\n    this.use.instance(ViewResources, this.resources);\r\n  }\r\n\r\n  /**\r\n   * Loads plugins, then resources, and then starts the Aurelia instance.\r\n   * @return Returns a Promise with the started Aurelia instance.\r\n   */\r\n  start(): Promise<Aurelia> {\r\n    if (this._started) {\r\n      return this._started;\r\n    }\r\n\r\n    this.logger.info('Aurelia Starting');\r\n    return this._started = this.use.apply().then(() => {\r\n      preventActionlessFormSubmit();\r\n\r\n      if (!this.container.hasResolver(BindingLanguage)) {\r\n        let message = 'You must configure Aurelia with a BindingLanguage implementation.';\r\n        this.logger.error(message);\r\n        throw new Error(message);\r\n      }\r\n\r\n      this.logger.info('Aurelia Started');\r\n      let evt = DOM.createCustomEvent('aurelia-started', { bubbles: true, cancelable: true });\r\n      DOM.dispatchEvent(evt);\r\n      return this;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enhances the host's existing elements with behaviors and bindings.\r\n   * @param bindingContext A binding context for the enhanced elements.\r\n   * @param applicationHost The DOM object that Aurelia will enhance.\r\n   * @return Returns a Promise for the current Aurelia instance.\r\n   */\r\n  enhance(bindingContext: object = {}, applicationHost: string | Element = null): Promise<Aurelia> {\r\n    this._configureHost(applicationHost || DOM.querySelectorAll('body')[0]);\r\n\r\n    return new Promise(resolve => {\r\n      let engine = this.container.get(TemplatingEngine) as TemplatingEngine;\r\n      this.root = engine.enhance({container: this.container, element: this.host, resources: this.resources, bindingContext: bindingContext});\r\n      this.root.attached();\r\n      this._onAureliaComposed();\r\n      resolve(this);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Instantiates the root component and adds it to the DOM.\r\n   * @param root The root component to load upon bootstrap.\r\n   * @param applicationHost The DOM object that Aurelia will attach to.\r\n   * @return Returns a Promise of the current Aurelia instance.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  setRoot(root: string | Function = null, applicationHost: string | Element = null): Promise<Aurelia> {\r\n    let instruction = {} as CompositionContext;\r\n\r\n    if (this.root && this.root.viewModel && this.root.viewModel.router) {\r\n      this.root.viewModel.router.deactivate();\r\n      this.root.viewModel.router.reset();\r\n    }\r\n\r\n    this._configureHost(applicationHost);\r\n\r\n    let engine = this.container.get(TemplatingEngine) as TemplatingEngine;\r\n    let transaction = this.container.get(CompositionTransaction);\r\n    delete (transaction as any).initialComposition;\r\n\r\n    if (!root) {\r\n      if (this.configModuleId) {\r\n        root = relativeToFile('./app', this.configModuleId);\r\n      } else {\r\n        root = 'app';\r\n      }\r\n    }\r\n\r\n    instruction.viewModel = root;\r\n    instruction.container = instruction.childContainer = this.container;\r\n    instruction.viewSlot = this.hostSlot;\r\n    instruction.host = this.host;\r\n\r\n    return engine.compose(instruction).then((r: View) => {\r\n      this.root = r;\r\n      instruction.viewSlot.attached();\r\n      this._onAureliaComposed();\r\n      return this;\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  _configureHost(applicationHost) {\r\n    if (this.hostConfigured) {\r\n      return;\r\n    }\r\n    applicationHost = applicationHost || this.host;\r\n\r\n    if (!applicationHost || typeof applicationHost === 'string') {\r\n      this.host = DOM.getElementById(applicationHost || 'applicationHost');\r\n    } else {\r\n      this.host = applicationHost;\r\n    }\r\n\r\n    if (!this.host) {\r\n      throw new Error('No applicationHost was specified.');\r\n    }\r\n\r\n    this.hostConfigured = true;\r\n    (this.host as any).aurelia = this;\r\n    this.hostSlot = new ViewSlot(this.host, true);\r\n    this.hostSlot.transformChildNodesIntoView();\r\n    this.container.registerInstance(DOM.boundary, this.host);\r\n  }\r\n\r\n  /** @internal */\r\n  _onAureliaComposed() {\r\n    let evt = DOM.createCustomEvent('aurelia-composed', { bubbles: true, cancelable: true });\r\n    setTimeout(() => DOM.dispatchEvent(evt), 1);\r\n  }\r\n}\r\n\r\n/** @internal */\r\ndeclare module 'aurelia-templating' {\r\n  interface View {\r\n    viewModel: any;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}